services:
    app:
        image: ratblog
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            DB_NAME: ${DB_NAME:-postgres}
            DB_HOST: ${DB_HOST:-db}
            DB_PORT: ${DB_PORT:-5432}
            DB_USER: ${DB_USER:-postgres}
            DB_PASSWORD: ${DB_PASSWORD:-postgres}

            JWT_SECRET: ${JWT_SECRET:-jdfseiowjrwe234_please_change_me}
            JWT_EXPIRATION: ${JWT_EXPIRATION:-3600s}

            REDIS_HOST: ${REDIS_HOST:-redis}
            REDIS_PORT: ${REDIS_PORT:-6379}
            REDIS_PASSWORD: ${REDIS_PASSWORD:-1000}

            APP_HOST: ${APP_HOST:-0.0.0.0}
            APP_PORT: ${APP_PORT:-8080}
            DEBUG_APP: ${DEBUG_APP:-false}

        ports:
            - "${APP_PORT:-8080}:${APP_PORT:-8080}"
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        volumes:
            - app-data:/app/data
        healthcheck:
            test:
                [
                    "CMD",
                    "curl",
                    "-f",
                    "http://localhost:${APP_PORT:-8080}/api/v1/health",
                ]
            interval: 30s
            timeout: 10s
            retries: 3

    db:
        image: postgres:17
        environment:
            POSTGRES_DB: ${DB_NAME:-postgres}
            POSTGRES_USER: ${DB_USER:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
        ports:
            - "${DB_PORT:-5432}:${DB_PORT:-5432}"
        volumes:
            - db-data:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}",
                ]
            interval: 30s
            timeout: 10s
            retries: 5

    redis:
        image: redis:7
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD:-1000}
        ports:
            - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
        volumes:
            - redis-data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3

volumes:
    app-data:
    db-data:
    redis-data:
